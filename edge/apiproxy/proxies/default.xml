<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--UAT-->
<ProxyEndpoint name="default">
    <DefaultFaultRule name="fault-rule">
        <Step>
            <Name>FC-FaultRules</Name>
        </Step>
        <Step>
            <Name>FC-setResponseHeaders</Name>
        </Step>
    </DefaultFaultRule>
    <FaultRules>
        <FaultRule name="RaiseFault">
            <Step>
                <Name>FC-setResponseHeaders</Name>
            </Step>
            <Condition>(fault.name = "RaiseFault")</Condition>
        </FaultRule>
    </FaultRules>
    <PreFlow name="PreFlow">
        <Request>
            <Step>
                <Name>AM-setSuccessFlag</Name>
            </Step>
            <Step>
                <Name>EV-extractTransactionId</Name>
                <Condition>(request.header.content-type = "application/json")</Condition>
            </Step>
            <Step>
                <Name>KVM-readCommonConfig</Name>
            </Step>
            <Step>
                <Name>JS-corsValidation</Name>
            </Step>
            <Step>
                <Condition>(request.verb is "OPTIONS")</Condition>
                <Name>RF-handlePreflightRequest</Name>
            </Step>
            <Step>
                <Name>Verify-API-Key</Name>
            </Step>
            <Step>
                <Name>JS-validatingIP</Name>
            </Step>
            <Step>
                <Condition>!(isValidIp is true)</Condition>
                <Name>AC-accesscontrol</Name>
            </Step>
            <Step>
                <Name>SA-rateLimit</Name>
            </Step>
            <Step>
                <Name>Quota</Name>
            </Step>
            <Step>
                <Name>RF-invalidContenType</Name>
                <Condition>(request.header.content-type != "application/json")</Condition>
            </Step>
            <Step>
                <Name>EV-extractPayload</Name>
                <Condition>(request.header.content-type = "application/json")</Condition>
            </Step>
            <Step>
                <Name>JS-validateScope</Name>
            </Step>
            <Step>
                <Condition>!(isValidScope is true)</Condition>
                <Name>RF-invalidRequestScope</Name>
            </Step>
            <Step>
                <Name>RF-badRequest</Name>
                <Condition>(requestPayload.RequestSignatureEncryptedValue = "") OR (requestPayload.SymmetricKeyEncryptedValue = "") OR (requestPayload.Scope = "")  OR (requestPayload.TransactionId = "") OR (requestPayload.OAuthTokenValue = "")</Condition>
            </Step>
            <Step>
                <Name>AM-setAuthHeader</Name>
            </Step>
            <Step>
                <Name>FC-validateToken</Name>
            </Step>
        </Request>
        <Response>
            <Step>
                <Name>FC-setResponseHeaders</Name>
            </Step>
        </Response>
    </PreFlow>
    <Flows>
        <Flow name="OTP_Gen">
            <Description/>
            <Request>
                <Step>
                    <Name>FC-validateCertificateAndExtractPublickey</Name>
                </Step>
                <Step>
                    <Name>FC-Decryption</Name>
                </Step>
                <Step>
                    <Name>Verify-JWT</Name>
                </Step>
                <Step>
                    <Name>Decode-JWT</Name>
                </Step>
                <Step>
                    <Name>AM-setPayload</Name>
                </Step>
                <Step>
                    <Name>EV-setRequestRefNoLogs</Name>
                    <Condition>(request.header.content-type = "application/json")</Condition>
                </Step>
                <Step>
                    <Name>FC-threatProtection</Name>
                </Step>
                <Step>
                    <Name>JSON-to-XML</Name>
                </Step>
                <Step>
                    <Name>XSLT-request</Name>
                </Step>
                <Step>
                    <Name>AM-setRequestContentLogs</Name>
                </Step>
            </Request>
            <Response>
                <Step>
                    <Name>XSLT-setBackendResponseLog</Name>
                </Step>
                <Step>
                    <Name>AM-setResponseContentLogs</Name>
                </Step>
                <Step>
                    <Name>XSLT-response</Name>
                </Step>
                <Step>
                    <Name>XML-to-JSON</Name>
                </Step>
                <Step>
                    <Name>AM-setTransformedPayloadLog</Name>
                </Step>
                <Step>
                    <Name>EV-setResponseErrorCodeLogs</Name>
                    <Condition>(response.content != null)</Condition>
                </Step>
                <Step>
                    <Name>Generate-JWS</Name>
                </Step>
                <Step>
                    <Name>FC-Encryption</Name>
                </Step>
                <Step>
                    <Name>AM-setPayloadResponse</Name>
                </Step>
            </Response>
            <Condition>((proxy.pathsuffix MatchesPath "") or (proxy.pathsuffix MatchesPath "/")) and (request.verb = "POST")</Condition>
        </Flow>
        <Flow name="OTP_Gen">
            <Description/>
            <Request>
                <Step>
                    <Name>RF-faultResponseMethodNotAllowed</Name>
                </Step>
            </Request>
            <Response/>
            <Condition>(proxy.pathsuffix MatchesPath "") or (proxy.pathsuffix MatchesPath "/")</Condition>
        </Flow>
        <Flow name="Fallback">
            <Description/>
            <Request>
                <Step>
                    <Name>RF-faultResponseNotFound</Name>
                </Step>
            </Request>
            <Response/>
        </Flow>
    </Flows>
    <PostFlow name="PostFlow">
        <Request/>
        <Response/>
    </PostFlow>
    <PostClientFlow>
        <Response>
            <Step>
                <Name>ML-setMessageLogging</Name>
            </Step>
            <Step>
                <Name>ML-SIEM</Name>
            </Step>
        </Response>
    </PostClientFlow>
    <HTTPProxyConnection>
        <BasePath>/api/Basic-Template</BasePath>
        <VirtualHost>secure</VirtualHost>
    </HTTPProxyConnection>
    <RouteRule name="default">
        <TargetEndpoint>default</TargetEndpoint>
    </RouteRule>
</ProxyEndpoint>